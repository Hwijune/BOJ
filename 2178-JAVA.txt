import java.io.*;
 
import java.util.*;
 
public class Main
{
    static int dx[] = { -1, 1, 0, 0 };
    static int dy[] = { 0, 0, 1, -1 };
    static int arr[][] = new int[101][101];
    static Queue<Pos> q = new LinkedList<>();
    static int M, N;
    
    static class Pos
    {
        int x;
        int y;
        
        Pos(int x, int y)
        {
            this.x = x;
            this.y = y;
        }
    }
    
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int M = Integer.parseInt(st.nextToken());
        int N = Integer.parseInt(st.nextToken());
        
        for (int i = 0; i < M; i++)
        {
            String s = br.readLine();
            for (int j = 0; j < N; j++)
            {
                arr[i][j] = s.charAt(j) - '0';
            }
        }
        
        q.offer(new Pos(0, 0));
        
        while (!q.isEmpty())
        {
            int x = q.peek().x;
            int y = q.peek().y;
            q.poll();
            
            for (int i = 0; i < 4; i++)
            {
                int nx = x + dx[i];
                int ny = y + dy[i];
                
                if (0 <= nx && nx < M && 0 <= ny && ny < N)
                {
                    if (arr[nx][ny] == 1)
                    {
                        arr[nx][ny] = arr[x][y] + 1;
                        q.offer(new Pos(nx, ny));
                    }
                }
            }
        }
        
//        for (int i = 0; i < M; i++)
//        {
//            for (int j = 0; j < N; j++)
//            {
//                System.out.print(arr[i][j] + " ");
//            }
//            System.out.println();
//        }
        
        System.out.println(arr[M - 1][N - 1]);
    }
}
