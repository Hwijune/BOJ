#include <iostream>
#include <queue>
using namespace std;
 
int dx[] = { 0,0,1,-1 };
int dy[] = { 1,-1,0,0 };
int box[1001][1001];
int check[1001][1001];
 
int main(void) {
    int M, N;
    cin >> M >> N;
 
    queue<pair<int, int>> q;
 
    for (int i = 1; i <= N; i++)
    {
        for (int j = 1; j <= M; j++)
        {
            cin >> box[i][j];
            if (box[i][j] == 1) // 익은 것 큐에넣기
            {
                q.push(make_pair(i, j));
                check[i][j] = 1;
            }
        }
    }
 
    while (!q.empty())
    {
        int x = q.front().first; //i값
        int y = q.front().second; //j값
        q.pop();
 
        //익은 토마토의 상하좌우는 다음에 익기 때문에 큐에 담아야한다.
        // 0,1(하단) 0,-1(상단) 1,0(우) -1,0(좌(
        for (int i = 0; i < 4; i++)
        {
            int nx = x + dx[i];
            int ny = y + dy[i];
            if (1 <= nx && nx <= N && 1 <= ny && ny <= M)
            {
                if (check[nx][ny] == 0 && box[nx][ny] == 0)
                {
                    check[nx][ny] = check[x][y] + 1;
                    box[nx][ny] = 1;
                    q.push(make_pair(nx, ny));
                }
            }
        }
    }
    int flag = 0;
    int max = 0;
    for (int i = 1; i <= N; i++)
    {
        for (int j = 1; j <= M; j++)
        {
            if (box[i][j] == 0) // 다 돌았는데도 0이있음
            {
                flag = 1;
            }
            if (check[i][j] > max)
                max = check[i][j];
        }
    }
    if (flag == 1)
        cout << -1 << '\n';
    else
        cout << max - 1 << '\n';
    return 0;
}
