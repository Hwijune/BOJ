import java.io.*;
import java.util.*;
 
public class Main
{
    static void solve(long n)
    {
        // 9876543210 MAX
        
        int count = 0;
        long num = 0;
        
        while (true)
        {
            boolean isDsc = true;
            long temp = num;
            long jump = 1;
            long before = -1;
            
            // 일의자리부터 한자리씩 비교
            while (temp != 0)
            {
                
                if (temp % 10 <= before)
                {
                    isDsc = false;
                }
                
                // jump를 최대치로 늘리기 위함.
                if (!isDsc && temp % 10 > before)
                {
                    break;
                }
                
                // jump는 어떤 자릿수에서 감소하는 수가 아닌지를 식별한다.
                jump *= 10;
                before = temp % 10;
                temp /= 10;
            }
            
            if (isDsc)
            {
                if (n == count++)
                {
                    break;
                }
                num++;
            } else
            {
                // 불필요한 부분 점프.
                // 11 -> 20 으로 넘어가야한다. 무작정 점프 수만큼 넘어버리면 11 -> 21, 22 -> 32
                // 뒷 자리를 0으로 초기화 시켜줘야한다.
                jump /= 10;
                num += jump;
                num = num / jump * jump;
                //System.out.println(jump + " " + num);
                continue;
            }
            
        }
        System.out.println(num);
    }
    
    public static void main(String[] args) throws Exception
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuffer sb = new StringBuffer();
        
        int n = Integer.parseInt(br.readLine());
        
        int count = 0;
        if (n < 10)
        {
            System.out.println(n);
        } else if (n > 1022)
        {
            System.out.println("-1");
        } else
        {
            solve(n);
        }
    }
}
